[dataset.yarrp]
enabled = false
read_compressed = false
address_type = 'V4' # one of [V4, V6]
input_path = '../../01_yarrp_scan/input/v4'
intermediate_path = '../../01_yarrp_scan/output/v4/intermediate'
output_path = '../../01_yarrp_scan/output/v4'

[dataset.warts]
enabled = false
read_compressed = false # Not relevant for WARTS. As for now, the files are always assumed compressed as .warts.gz
address_type = 'V6' # one of [V4, V6]
input_path = '../../caida-ip-scans/custom/v6/input'
intermediate_path = '../../caida-ip-scans/custom/v6/output/intermediate'
output_path = '../../caida-ip-scans/custom/v6/output'

[features]
# Skipping a step here assumes that the outputs of the previous file are present. If not, the program will panic.
should_preprocess = true
should_merge = true
should_persist_index = true
should_persist_edges = true
should_deduplicate_edges = true
should_compute_graph = true

[features.parameters.degree]
enabled = true

[features.parameters.betweenness]
enabled = true
save_intermediate_results_periodically = true
result_batch_size = 1_000 # This applies both to the progress counter and the periodical saving of intermediate results.
max_thread_count = 12 # Recommendation: Set to as many threads as you have CPU cores
